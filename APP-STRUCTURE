# 💼 Bank Loan Simulator – Tech Stack & Local Demo Setup

## 🎯 Goal
Create a fully functional, Revolut-style **loan simulation demo** (User + Admin screens) that runs entirely **locally** with no cloud dependencies. This is optimized for showing off functionality and design in offline environments, in under 10 minutes setup time.

---

## ✅ Tech Stack Overview

| Layer             | Technology                         | Notes |
|------------------|-------------------------------------|-------|
| **Frontend**     | React + Vite + TypeScript          | Fast, modern dev server |
| **Styling/UI**   | Tailwind CSS + custom Revolut theme | Includes brand colors + Aeonik font fallback |
| **Charts**       | Recharts                           | Easy integration for amortization visuals |
| **State & API**  | React Query                        | Fetching + caching simulation results |
| **Backend**      | FastAPI (Python)                   | Lightweight, auto-generated docs (Swagger) |
| **Database**     | SQLite                             | File-based DB – no setup required |
| **Auth**         | JWT (via FastAPI JWT)              | Admin login protection |
| **Email (mock)** | Console print / Mailhog optional   | Lead data printed to terminal or local inbox |
| **i18n**         | JSON file based (en/fr)            | Supports multiple languages with fallback |
| **Dev Tools**    | Docker + Docker Compose (optional) | One-command startup for full stack |

---

## 🎨 Revolut-Inspired Visual Identity

| Visual Element | Value |
|----------------|-------|
| **Primary Color** | `#6E4CE5` (Electric Purple) |
| **Accent Color** | `#81B2F1` (Sky Blue) |
| **Dark UI Base** | `#261073` (Midnight), `#2C1385` (Indigo) |
| **Text / Contrast** | `#39343B` (Charcoal) |
| **Background** | `#CFB9C4` (Mist) |
| **Gradient** | Electric Purple → Sky Blue @ 45° |
| **Font** | Aeonik Pro (fallback: Inter, system-ui) |

---

## 🧱 File Structure

```
loan-simulator/
├── frontend/
│   ├── vite.config.ts
│   ├── tailwind.config.js
│   └── src/
│       ├── components/
│       ├── pages/ (UserView.tsx, AdminView.tsx)
│       ├── api/
│       └── i18n/ (en.json, fr.json)
├── backend/
│   ├── main.py
│   ├── models.py
│   ├── routes.py
│   └── config.json (loan rules)
├── db/
│   └── loan_simulator.sqlite
├── docker-compose.yml (optional)
└── README.md
```

---

## 🧪 Features Included

- 💡 Interactive loan simulations for Home, Vehicle, and Personal loans
- 🔐 Admin dashboard with JWT login
- 🧮 Dynamic configuration of interest rates, terms, max LTV, and fees
- 📊 Real-time amortization chart
- 📧 Lead capture via email form (prints to console)
- 🌍 Bilingual support (EN / FR)
- 🖥️ Responsive design styled like Revolut

---

## 🏁 Local Run Instructions

### Prerequisites
- Python 3.10+
- Node.js 18+
- npm or yarn

### 1. Install Frontend
```bash
cd frontend
npm install
npm run dev
```

### 2. Install Backend
```bash
cd backend
python -m venv .venv
source .venv/bin/activate
pip install -r requirements.txt
uvicorn main:app --reload
```

### 3. (Optional) Run with Docker
```bash
docker-compose up --build
```

---

## 🧠 Future Upgrades
- PDF quote generation (`jspdf`)
- OAuth sign-in
- Dark mode toggle
- CSV export of simulations/leads
- Real-time API analytics (e.g. PostHog)

---

For any contribution guidelines or issues, please refer to `CONTRIBUTING.md` or open an issue on the repo.

---

**© 2025 Bank Loan Simulator – Built for internal demo purposes**

